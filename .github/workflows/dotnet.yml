name: .NET

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write  # Needed for GitHub Releases
    outputs:
      artifact-path: YoutubeDownloader-${{github.ref_name}}.zip  # Pass ZIP path to next job

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Publish
        run: dotnet publish -c Release -o publish

      - name: Decode Certificate
        shell: powershell
        run: |
          $cert = "${{ secrets.CODE_SIGNING_CERT }}"
          $bytes = [System.Convert]::FromBase64String($cert)
          [System.IO.File]::WriteAllBytes("cert.pfx", $bytes)

      - name: Sign Executable
        run: |
          $signtool = "C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool\signtool.exe"
          & $signtool sign /fd SHA256 /f "cert.pfx" /p ${{secrets.CERT_PASSWORD}} "publish\YoutubeDownloaderWpf.exe"


      - name: Create ZIP Archive with 7-Zip
        run: |
          Set-Location -Path publish
          & "C:\Program Files\7-Zip\7z.exe" a -tzip -mx9 ..\YoutubeDownloader-${{github.ref_name}}.zip *

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-zip
          path: YoutubeDownloader-${{github.ref_name}}.zip

  release:
    needs: build  # Run only after the build job
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: release-zip

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: YoutubeDownloader-${{github.ref_name}}.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
